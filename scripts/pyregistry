#!/usr/bin/env python3
"""
Script entrypoint for copying images between registries.
"""

import argparse
import logging
import sys

from pyregistry import parse_image_name, parse_user


def main() -> None:
    """
    CLI entrypoint that copies an image between two registries.
    """
    handler = logging.StreamHandler(sys.stdout)
    handler.setLevel(logging.INFO)
    formatter = logging.Formatter("%(message)s")
    handler.setFormatter(formatter)

    root = logging.getLogger()
    root.setLevel(logging.INFO)
    root.addHandler(handler)

    parser = argparse.ArgumentParser(
        description="Copy images between registries. If no dest image is given"
        " this will simply output the src manifest"
    )
    parser.add_argument("--src", required=True, help="Source registry image")
    parser.add_argument(
        "--src-user", required=False, default="", help="Source user:password basic auth"
    )
    parser.add_argument(
        "--src-ca", required=False, default=None, help="Source CA certificate"
    )
    parser.add_argument("--dst", required=False, help="Dest registry image")
    parser.add_argument(
        "--dst-user", required=False, default="", help="Dest user:password basic auth"
    )
    parser.add_argument(
        "--dst-ca", required=False, default=None, help="Dest CA certificate"
    )
    args = parser.parse_args()

    src_manifest = parse_image_name(
        args.src, user=parse_user(args.src_user), verify=args.src_ca
    )
    if not args.dst:
        print(src_manifest.manifest().serialize().decode())
        return

    dst_manifest = parse_image_name(
        args.dst, user=parse_user(args.dst_user), verify=args.dst_ca
    )
    src_manifest.copy(dst_manifest)


if __name__ == "__main__":
    main()
